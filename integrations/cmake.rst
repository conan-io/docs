.. _cmake:

CMake
_____


|cmake_logo|


If you are using *CMake* to build your project, you can use the *cmake* generator to manage all your requirements.


**conanfile.txt**

.. code-block:: text

   ...
   
   [generators]
   cmake


When **conan install** is executed, a file named ``conanbuildinfo.cmake`` is created. 

We can include ``conanbuildinfo.cmake`` in our project's ``CMakeLists.txt`` to manage our requirements.


This is the ``CMakeLists.txt`` file we used in the getting started example:

.. code-block:: cmake

   PROJECT(FoundationTimer)
   CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

   INCLUDE(conanbuildinfo.cmake)
   CONAN_BASIC_SETUP()
   
   ADD_EXECUTABLE(timer timer.cpp)
   TARGET_LINK_LIBRARIES(timer ${CONAN_LIBS})
   

- **include(conanbuildinfo.cmake)** will include the file generated by our **cmake** [generator]
- **CONAN_BASIC_SETUP()** call will asign to **CMake** all the needed variables for linking with our requirements. 
- **${CONAN_LIBS}** contains the libraries to link with. So TARGET_LINK_LIBRARIES, works just fine.


Let's take a look to the generated ``conanbuildinfo.cmake`` file:


.. code-block:: cmake

    SET(CONAN_POCO_ROOT "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c")
    SET(CONAN_INCLUDE_DIRS_POCO "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c/include")
    SET(CONAN_LIB_DIRS_POCO "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c/lib")
    SET(CONAN_BIN_DIRS_POCO "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c/bin")
    SET(CONAN_LIBS_POCO PocoUtil PocoXML PocoJSON PocoMongoDB PocoNet PocoCrypto PocoData PocoDataSQLite PocoZip PocoFoundation pthread dl rt)
    SET(CONAN_DEFINES_POCO -DPOCO_STATIC=ON
                -DPOCO_NO_AUTOMATIC_LIBS)
    SET(CONAN_CXX_FLAGS_POCO "")
    SET(CONAN_SHARED_LINK_FLAGS_POCO "")
    SET(CONAN_EXE_LINKER_FLAGS_POCO "")
    SET(CONAN_C_FLAGS_POCO "")
    
    SET(CONAN_ZLIB_ROOT "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e")
    SET(CONAN_INCLUDE_DIRS_ZLIB "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e/include")
    SET(CONAN_LIB_DIRS_ZLIB "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e/lib")
    SET(CONAN_BIN_DIRS_ZLIB "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e/bin")
    SET(CONAN_LIBS_ZLIB z)
    SET(CONAN_DEFINES_ZLIB )
    SET(CONAN_CXX_FLAGS_ZLIB "")
    SET(CONAN_SHARED_LINK_FLAGS_ZLIB "")
    SET(CONAN_EXE_LINKER_FLAGS_ZLIB "")
    SET(CONAN_C_FLAGS_ZLIB "")
    
    SET(CONAN_OPENSSL_ROOT "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535")
    SET(CONAN_INCLUDE_DIRS_OPENSSL "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535/include")
    SET(CONAN_LIB_DIRS_OPENSSL "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535/lib")
    SET(CONAN_BIN_DIRS_OPENSSL "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535/bin")
    SET(CONAN_LIBS_OPENSSL ssl crypto dl)
    SET(CONAN_DEFINES_OPENSSL )
    SET(CONAN_CXX_FLAGS_OPENSSL "")
    SET(CONAN_SHARED_LINK_FLAGS_OPENSSL "")
    SET(CONAN_EXE_LINKER_FLAGS_OPENSSL "")
    SET(CONAN_C_FLAGS_OPENSSL "")
    
    SET(CONAN_INCLUDE_DIRS "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c/include"
                "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535/include"
                "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e/include" ${CONAN_INCLUDE_DIRS})
    SET(CONAN_LIB_DIRS "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c/lib"
                "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535/lib"
                "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e/lib" ${CONAN_LIB_DIRS})
    SET(CONAN_BIN_DIRS "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c/bin"
                "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535/bin"
                "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e/bin" ${CONAN_BIN_DIRS})
    SET(CONAN_LIBS PocoUtil PocoXML PocoJSON PocoMongoDB PocoNet PocoCrypto PocoData PocoDataSQLite PocoZip PocoFoundation pthread dl rt ssl crypto z ${CONAN_LIBS})
    SET(CONAN_DEFINES -DPOCO_STATIC=ON
                -DPOCO_NO_AUTOMATIC_LIBS ${CONAN_DEFINES})
    SET(CONAN_CXX_FLAGS " ${CONAN_CXX_FLAGS}")
    SET(CONAN_SHARED_LINK_FLAGS " ${CONAN_SHARED_LINK_FLAGS}")
    SET(CONAN_EXE_LINKER_FLAGS " ${CONAN_EXE_LINKER_FLAGS}")
    SET(CONAN_C_FLAGS " ${CONAN_C_FLAGS}")
    SET(CONAN_CMAKE_MODULE_PATH "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c" "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e" "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535" ${CONAN_CMAKE_MODULE_PATH})
    MACRO(CONAN_BASIC_SETUP)
        CONAN_CHECK_COMPILER()
        CONAN_OUTPUT_DIRS_SETUP()
        CONAN_FLAGS_SETUP()
        # CMake can find findXXX.cmake files in the root of packages
        SET(CMAKE_MODULE_PATH ${CONAN_CMAKE_MODULE_PATH} ${CMAKE_MODULE_PATH})
    ENDMACRO()

   # ... macros code...


As we can see, conan is preparing some variables:

* ``CONAN_INCLUDE_DIRS``: The headers folders from the requirements.
* ``CONAN_LIB_DIRS``: The library folders from the requirements.
* ``CONAN_BIN_DIRS``: The binary folders from the requirements.
* ``CONAN_LIBS``: The name of the libs we have to link with.
* ``CONAN_DEFINES``: Defines, observe that two are defined, POCO_STATIC and POCO_NO_AUTOMATIC_LIBS, that correspond to options.
* ``CONAN_C_FLAGS``: Flags for C. Not specified for Poco nor its requirements.
* ``CONAN_CXX_FLAGS``: Flags for CXX. Not specified for Poco nor its requirements.
* ``CONAN_SHARED_LINK_FLAGS``: Shared flags for CXX. Not specified for Poco nor its requirements.
* ``CONAN_EXE_LINKER_FLAGS``: Exe linker flags for CXX. Not specified for Poco nor its requirements.


Conan also provides the same variables isolated for each requirement, so you can handle the requirements individually:  **CONAN_POCO_ROOT**, **CONAN_INCLUDE_DIRS_POCO**, **CONAN_INCLUDE_DIRS_OPENSSL**,  etc


All these variables are 'injected' to corresponding **CMake** functions/variables *(INCLUDE_DIRECTORIES, LINK_DIRECTORIES, ADD_DEFINITIONS, CMAKE_CXX_FLAGS...etc)* when you call **CONAN_BASIC_SETUP()** in your ``CMakeLists.txt`` file.


Find Packages
=============

Conan (from version 0.5) provides support for CMake **find_package**.

If you have a project that uses **Boost** library, you are probably using **find_package(Boost)** or even **find_package(Boost COMPONENTS regex)**. You can keep it as is!

This is possible because `conan's boost package`_ provides a custom **FindBoost.cmake** that prepare the original FindBoost.cmake to find the libraries with the conan's package layout.

In the ``conanbuildinfo.cmake`` generated file we can see these lines:


.. code-block:: cmake

  SET(CONAN_CMAKE_MODULE_PATH "/home/laso/.conan/data/Poco/1.6.1/lasote/stable/package/afafc631e705f7296bec38318b28e4361ab6787c" "/home/laso/.conan/data/zlib/1.2.8/lasote/stable/package/3b92a20cb586af0d984797002d12b7120d38e95e" "/home/laso/.conan/data/OpenSSL/1.0.2d/lasote/stable/package/dd8a0e4171607d74dee9fd0c51153a922d849535" ${CONAN_CMAKE_MODULE_PATH})
    
  ...
  
  SET(CMAKE_MODULE_PATH ${CONAN_CMAKE_MODULE_PATH} ${CMAKE_MODULE_PATH}) 


This is appending to CMAKE_MODULE_PATH all the root folder from our requirements, so if we put a ``FindXXX.cmake`` file in root folder, CMake will be able to find it.

Boost is a massive and very complex library and ``FindBoost.cmake`` is not a good example to show you how could you generate your own FindXXX.cmake for your conan's packages.

Let's see a more manageable library `conan's zlib package`_.


.. code-block:: cmake


    find_path(ZLIB_INCLUDE_DIR NAMES zlib.h PATHS ${CONAN_INCLUDE_DIRS_ZLIB})
    find_library(ZLIB_LIBRARY NAMES ${CONAN_LIBS_ZLIB} PATHS ${CONAN_LIB_DIRS_ZLIB})
    SET(ZLIB_FOUND TRUE)

    
    set(ZLIB_INCLUDE_DIRS ${ZLIB_INCLUDE_DIR})
    set(ZLIB_LIBRARIES ${ZLIB_LIBRARY})
    

Its not very complex, specially if you are familiar with CMake **find_path** and **find_library** functions.

We are calling **find_path** pointing CMake to search in **${CONAN_INCLUDE_DIRS_ZLIB** directories, where we know that we have our headers.
Then we are calling to **find_library** passing the library names **${CONAN_LIBS_ZLIB}** and the paths where they are **${CONAN_LIB_DIRS_ZLIB}**.

So, any user could use Zlib library with conan this way:


**conanfile.txt**

.. code-block:: txt

    [requires]
    zlib/1.2.8@lasote/stable
    
    [generators]
    cmake



**CMakeLists.txt**    
    
.. code-block:: cmake

    PROJECT(MyHello)
    cmake_minimum_required(VERSION 2.8)
    
    include(conanbuildinfo.cmake)
    CONAN_BASIC_SETUP()
    
    find_package("ZLIB")
    
    IF(ZLIB_FOUND)
        ADD_EXECUTABLE(enough enough.c)
        include_directories(${ZLIB_INCLUDE_DIRS})
        TARGET_LINK_LIBRARIES(enough ${ZLIB_LIBRARIES})
    ELSE()
        MESSAGE(FATAL_ERROR "Zlib not found")
    ENDIF()


The ``CMakeLists.txt`` file is quite generic, surely the two lines that may diff with a CMakeLists.txt without conan are:

     
.. code-block:: cmake
    
    include(conanbuildinfo.cmake)
    CONAN_BASIC_SETUP()
      
      
You can see the whole example in `conan's zlib package`_ in the folder **"/test"**.


.. |cmake_logo| image:: ../images/cmake_logo.png

.. _`conan's boost package`: https://github.com/lasote/conan-boost.git
.. _`conan's zlib package`: https://github.com/lasote/conan-zlib.git
