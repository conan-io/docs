#!groovyâ€‹

node('LinuxDocs') {

    String branch_name = env.BRANCH_NAME
    // do not publish when the branch is a patch like release/2.0.1, just for minor release branches
    boolean publishDocs = branch_name.startsWith("release/2.") && branch_name.count(".") == 1
    def targetBranch = env.CHANGE_TARGET ? env.CHANGE_TARGET : env.BRANCH_NAME
    
    // We also have to clone conan sources for the sphinx autodoc extension
    // consider only the minor for the Conan branch, we do not use patches
    def conanBranch = targetBranch.startsWith("release/2.") ? "${targetBranch.split('\\.')[0]}.${targetBranch.split('\\.')[1]}" : 'develop2'
    def conan_repo_url = 'https://github.com/conan-io/conan.git'

    echo "Docs target branch: ${targetBranch}"
    echo "Conan target branch: ${conanBranch}"
    echo "env.BRANCH_NAME: ${env.BRANCH_NAME}"
    echo "env.CHANGE_BRANCH: ${env.CHANGE_BRANCH}"
    echo "env.CHANGE_TARGET: ${env.CHANGE_TARGET}"

    stage('Clone sources') {
        checkout scm
        def cloneAndInstallConan = "git clone --single-branch -b ${conanBranch} --depth 1 ${conan_repo_url} conan_sources"
        sh(script: cloneAndInstallConan)
    }

    stage('Test build') {
        sh 'pip install -r requirements.txt && pip install -e conan_sources && conan --version'
        parallel html: {
            sh(script: 'make html')
        },
        pdf: {
            sh(script: 'make latex')
        },
        spelling: {
            sh(script: 'make spelling')
        },
        linkcheck: {
            catchError(buildResult: 'SUCCESS', stageResult: 'UNSTABLE', message: 'Linkcheck failed! Please check links and fix broken ones.') {
                sh(script: 'make linkcheck')
            }
        }
    }

    // For beta releases we trigger the publish job on the master branch
    // this will republish all the docs including the updated release/2.0.0-beta
    // latest parameter still has to be 'master'
    if (publishDocs) {
        String branches = env.BRANCH_NAME
        echo "Will generate docs for ${branches}"
        build(job: 'Conan-Docs-Publish', propagate: true, wait: true, parameters: [
            [$class: 'StringParameterValue', name: 'branches', value: branches],
            [$class: 'BooleanParameterValue', name: 'publish', value: true]
        ])
    }
}
